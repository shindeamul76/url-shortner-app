# name: Build and Deploy Multi-Platform Docker Image

# on:
#   push:
#     branches:
#       - main

# env:
#   IMAGE_NAME: shindeamul76/url-shortner-app
#   TAG: latest

# jobs:
#   build-and-push:
#     name: Build and Push Multi-Platform Docker Image to Docker Hub
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout Code
#         uses: actions/checkout@v4

#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v2

#       - name: Log in to Docker Hub
#         uses: docker/login-action@v2
#         with:
#           username: ${{ secrets.DOCKERHUB_USERNAME }}
#           password: ${{ secrets.DOCKERHUB_PASSWORD }}

#       - name: Build and Push Multi-Platform Docker Image
#         run: |
#           docker buildx create --use
#           docker buildx build \
#             --platform linux/amd64,linux/arm64 \
#             -t $IMAGE_NAME:$TAG \
#             --push .

#   deploy:
#     name: Deploy Docker Container
#     runs-on: ubuntu-latest
#     needs: build-and-push

#     steps:
#       - name: Debug Variables
#         run: |
#           echo "IMAGE_NAME: $IMAGE_NAME"
#           echo "TAG: $TAG"

#       - name: SSH and Deploy
#         uses: appleboy/ssh-action@v0.1.5
#         with:
#           host: ${{ secrets.REMOTE_SERVER_IP }}
#           username: ${{ secrets.REMOTE_SERVER_USER }}
#           key: ${{ secrets.REMOTE_SERVER_KEY }}
#           port: ${{ secrets.REMOTE_SERVER_PORT }}
#           script: |
#             echo "Pulling image: $IMAGE_NAME:$TAG"
#             docker pull shindeamul76/url-shortner-app:latest
#             docker stop app || true
#             docker rm app || true
#             docker run -d --name app -p 3000:3000 \
#               --env-file /home/user/app/.env \
#               shindeamul76/url-shortner-app:latest