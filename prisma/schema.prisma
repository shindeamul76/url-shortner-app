generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 Int       @id @default(autoincrement())
  email              String    @unique
  photoURL           String?
  displayName        String?
  lastLoggedOn       DateTime? @db.Timestamp(3)
  refreshToken       String?
  currentRESTSession Json?

  createdAt        DateTime   @default(now())
  urls             ShortURL[]
  providerAccounts Account[]
  rateLimit        RateLimit?
}

model Account {
  id                   Int      @id @default(autoincrement())
  userId               Int
  user                 User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  provider             String
  providerAccountId    String
  providerRefreshToken String?
  providerAccessToken  String?
  providerScope        String?
  loggedIn             DateTime @default(now()) @db.Timestamp(3)

  @@unique(fields: [provider, providerAccountId], name: "verifyProviderAccount")
}

model ShortURL {
  id           Int       @id @default(autoincrement())
  longUrl      String
  shortAlias   String    @unique
  topic        Topic?
  description  String?
  createdAt    DateTime  @default(now())
  lastAccessed DateTime? @db.Timestamp(3)
  expiresAt    DateTime? @db.Timestamp(3)
  clicks       Int       @default(0)

  userID       Int
  user         User          @relation(fields: [userID], references: [id])
  redirectLogs RedirectLog[]
}

enum Topic {
  acquisition
  activation
  retention
}

model RedirectLog {
  id          Int      @id @default(autoincrement())
  timestamp   DateTime @default(now())
  userAgent   String
  ipAddress   String
  country     String?
  region      String?
  city        String?
  geoLocation String?
  osName      String?
  deviceType  String?

  shortUrlID Int
  shortUrl   ShortURL @relation(fields: [shortUrlID], references: [id])
}

model RateLimit {
  id              Int       @id @default(autoincrement())
  requestCount    Int
  maxRequests     Int
  timeWindowStart DateTime
  timeWindowEnd   DateTime?

  userID Int  @unique
  user   User @relation(fields: [userID], references: [id])
}
